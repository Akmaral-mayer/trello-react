{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloList.js","components/Modal.js","components/App.js","reducers/listsReducer.js","reducers/index.js","store/index.js","index.js","actions/index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","CardContainer","styled","div","TrelloCard","id","index","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","CardContent","Typography","TrelloActionButton","state","formOpen","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","dispatch","props","handleAddCard","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","onClick","style","styles","opentForButtonGroup","opacity","color","background","Icon","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formButtonGroup","Button","onMouseDown","variant","backgroundColor","marginLeft","cursor","this","React","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop","connect","ListsContainer","TrelloList","cards","droppableId","droppableProps","marginBottom","map","card","Modal","onClose","photos","onSetBg","useState","data","setData","useEffect","then","res","response","results","modal","container","el","urls","full","backgroundImage","thumb","image","position","zIndex","margin","flexWrap","justifyContent","Header","Title","h1","button","unsplash","createApi","accessKey","headers","App","bg","currentBg","search","getPhotos","query","page","perPage","orientation","onDragEnd","result","destination","source","val","lists","backgroundRepeat","backgroundSize","direction","initialState","cardID","listsReducer","action","newList","newCard","newState","splice","find","listStart","listEnd","combineReducers","listReducer","store","createStore","rootReducer","ReactDOM","render","document","getElementById","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD"],"mappings":"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","file":"static/js/main.ce07e0aa.chunk.js","sourcesContent":["import { CONSTANTS } from \".\";\nimport uuid from \"uuidv4\";\n\nexport const addList = (title) => {\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: title,\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAG_HAPPENED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type,\n    },\n  };\n};\n","import { CONSTANTS } from \".\";\n\nexport const addCard = (listID, text) => {\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID },\n  };\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst CardContainer = styled.div`\n  margin-bottom: 8px;\n`;\n\nexport const TrelloCard = ({ text, id, index }) => {\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {(provided) => (\n        <CardContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Card>\n            <CardContent>\n              <Typography>{text}</Typography>\n            </CardContent>\n          </Card>\n        </CardContainer>\n      )}\n    </Draggable>\n  );\n};\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport TextArea from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nclass TrelloActionButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: \"\",\n  };\n\n  openForm = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = (e) => {\n    this.setState({ formOpen: false });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\",\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\",\n      });\n      dispatch(addCard(listID, text));\n    }\n\n    return;\n  };\n\n  renderAddButton = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0, 0, 0, .15)\" : \"inherit\";\n\n    return (\n      <div\n        onClick={this.openForm}\n        style={{\n          ...styles.opentForButtonGroup,\n          opacity: buttonTextOpacity,\n          color: buttonTextColor,\n          background: buttonTextBackground,\n        }}\n      >\n        <Icon>add</Icon>\n        <p>{buttonText}</p>\n      </div>\n    );\n  };\n\n  renderForm = () => {\n    const { list } = this.props;\n\n    const placeholder = list\n      ? \"Enter list title . . .\"\n      : \"Enter a title for this card ...\";\n\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n    return (\n      <div>\n        <Card\n          style={{\n            overflow: \"visible\",\n            minHeight: 80,\n            minWidth: 272,\n            padding: \"6px 8px 2px\",\n          }}\n        >\n          <TextArea\n            placeholder={placeholder}\n            autoFocus\n            onBlur={this.closeForm}\n            value={this.state.text}\n            onChange={this.handleInputChange}\n            style={{\n              resize: \"none\",\n              width: \"100%\",\n              outline: \"none\",\n              border: \"none\",\n            }}\n          />\n        </Card>\n        <div style={styles.formButtonGroup}>\n          <Button\n            onMouseDown={list ? this.handleAddList : this.handleAddCard}\n            variant=\"contained\"\n            style={{ color: \"white\", backgroundColor: \"#5aac44\" }}\n          >\n            {buttonTitle}\n          </Button>\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n}\n\nconst styles = {\n  opentForButtonGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10,\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n};\n\nexport default connect()(TrelloActionButton);\n","import React from \"react\";\nimport { TrelloCard } from \"./TrelloCard\";\nimport TrelloActionButton from \"./TrelloActionButton\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst ListsContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  margin-right: 8px;\n`;\n\nexport const TrelloList = ({ title, cards, listID, index }) => {\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {(provided) => (\n        <ListsContainer\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                <h3 style={{ marginBottom: 8 }}>{title}</h3>\n                {cards.map((card, index) => {\n                  return (\n                    <TrelloCard\n                      index={index}\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n                <TrelloActionButton listID={listID} />\n              </div>\n            )}\n          </Droppable>\n        </ListsContainer>\n      )}\n    </Draggable>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nexport const Modal = ({ onClose, photos, onSetBg }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    photos.then((res) => {\n      setData(res.response.results);\n    });\n  }, []);\n\n  return (\n    <div onClick={onClose} style={styles.modal}>\n      <div style={styles.container}>\n        <h1 style={{ marginTop: 10 }}>Choose background</h1>\n        <div style={styles.container}>\n          {data &&\n            data.map((el, id) => {\n              return (\n                <div\n                  onClick={() => onSetBg(el.urls.full)}\n                  style={{\n                    backgroundImage: `url(${el.urls.thumb})`,\n                    ...styles.image,\n                  }}\n                  key={id}\n                ></div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  modal: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(20, 22, 24, 0.2)\",\n    zIndex: \"10\",\n  },\n  container: {\n    width: \"500px\",\n    margin: \"50px auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    zIndex: \"15\",\n    borderRadius: 5,\n  },\n  image: {\n    width: \"100px\",\n    height: \"100px\",\n    margin: 10,\n    cursor: \"pointer\",\n  },\n};\n","import { TrelloList } from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport TrelloActionButton from \"./TrelloActionButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\nimport { Modal } from \"./Modal\";\nimport { createApi } from \"unsplash-js\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Title = styled.h1`\n  font-family: Arial;\n`;\n\nconst Button = styled.button`\n  border-style: none;\n  border-radius: 3px;\n  height: 36px;\n  width: 150px;\n  padding-left: 10;\n  background-color: #5aac44;\n  color: white;\n  cursor: pointer;\n  outline: none;\n`;\n\nconst unsplash = createApi({\n  accessKey: \"x_3ldezigzJBJ1VSwdJnL1GLJdm93x44xmD4RnyTBGI\",\n  headers: { \"X-Custom-Header\": \"foo\" },\n});\n\nclass App extends Component {\n  state = {\n    bg: false,\n    currentBg:\n      \"https://images.unsplash.com/photo-1580763543521-dc54d5be9695?crop=entropy&cs=srgb&fm=jpg&ixid=MnwyMjExMTl8MHwxfHNlYXJjaHw2fHx3YWxsc3xlbnwwfDB8fGdyZWVufDE2MTc3NjYzNDQ&ixlib=rb-1.2.1&q=85\",\n    photos: unsplash.search.getPhotos({\n      query: \"walls\",\n      page: 1,\n      perPage: 10,\n      color: \"green\",\n      orientation: \"landscape\",\n    }),\n  };\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  onClose = () => {\n    this.setState({ bg: false });\n  };\n\n  onSetBg = (val) => {\n    this.setState({ currentBg: val });\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <>\n        {this.state.bg && (\n          <Modal\n            photos={this.state.photos}\n            onClose={this.onClose}\n            onSetBg={this.onSetBg}\n          />\n        )}\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div\n            style={{\n              padding: \"20px\",\n              backgroundImage: `url(${this.state.currentBg})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"cover\",\n              height: \"100%\",\n            }}\n          >\n            <Header>\n              <Title>Trello</Title>\n              <Button onClick={() => this.setState({ bg: true })}>\n                Set background\n              </Button>\n            </Header>\n            <Droppable\n              droppableId=\"all-lists\"\n              direction=\"horizontal\"\n              type=\"list\"\n            >\n              {(provided) => (\n                <ListsContainer\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {lists.map((list, index) => {\n                    return (\n                      <TrelloList\n                        listID={list.id}\n                        key={list.id}\n                        title={list.title}\n                        cards={list.cards}\n                        index={index}\n                      />\n                    );\n                  })}\n                  <TrelloActionButton list />\n                </ListsContainer>\n              )}\n            </Droppable>\n          </div>\n        </DragDropContext>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [\n  {\n    title: \"To do\",\n    id: `list-${0}`,\n    cards: [\n      {\n        id: `card-${0}`,\n        text: \"to be happy\",\n      },\n      {\n        id: `card-${1}`,\n        text: \"to be thankful\",\n      },\n    ],\n  },\n];\nlet listID = 1;\nlet cardID = 4;\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: `list-${listID}`,\n      };\n      listID += 1;\n      return [...state, newList];\n    }\n\n    case CONSTANTS.ADD_CARD:\n      const newCard = {\n        text: action.payload.text,\n        id: `card-${cardID}`,\n      };\n      cardID += 1;\n\n      const newState = state.map((list) => {\n        if (list.id === action.payload.listID) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard],\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        // draggableId,\n        type,\n      } = action.payload;\n\n      const newState = [...state];\n\n      // dragging lists around\n      if (type === \"list\") {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find((list) => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state.find((list) => droppableIdStart === list.id);\n\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n\n        const listEnd = state.find((list) => droppableIdEnd === list.id);\n\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { combineReducers } from \"redux\";\nimport listReducer from \"./listsReducer\";\n\nexport default combineReducers({\n  lists: listReducer,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\",\n};\n"],"sourceRoot":""}